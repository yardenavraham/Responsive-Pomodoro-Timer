[{"C:\\Users\\User\\react\\pomodoro-app\\src\\index.js":"1","C:\\Users\\User\\react\\pomodoro-app\\src\\reportWebVitals.js":"2","C:\\Users\\User\\react\\pomodoro-app\\src\\components\\App.js":"3","C:\\Users\\User\\react\\pomodoro-app\\src\\components\\SessionLength.js":"4","C:\\Users\\User\\react\\pomodoro-app\\src\\components\\BreakInterval.js":"5","C:\\Users\\User\\react\\pomodoro-app\\src\\components\\Timer.js":"6","C:\\Users\\User\\react\\pomodoro-app\\src\\components\\FlipClock.js":"7"},{"size":511,"mtime":1608671703028,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":3403,"mtime":1609066940371,"results":"11","hashOfConfig":"9"},{"size":1201,"mtime":1608719649459,"results":"12","hashOfConfig":"9"},{"size":1188,"mtime":1608719615975,"results":"13","hashOfConfig":"9"},{"size":3453,"mtime":1609066928737,"results":"14","hashOfConfig":"9"},{"size":5640,"mtime":1609063310430,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"153ffh3",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\react\\pomodoro-app\\src\\index.js",[],["33","34"],"C:\\Users\\User\\react\\pomodoro-app\\src\\reportWebVitals.js",[],"C:\\Users\\User\\react\\pomodoro-app\\src\\components\\App.js",["35","36"],"import React from 'react';\nimport BreakInterval from './BreakInterval';\nimport SessionLength from './SessionLength';\nimport Timer from './Timer';\nimport FlipClock from './FlipClock';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '../App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      sessionLength: 25,\n      breakLength: 5,\n      timerMinute: 25,\n      isPlay: false\n    }\n\n    this.onIncreaseBreakLength = this.onIncreaseBreakLength.bind(this);\n    this.onDecreaseBreakLength = this.onDecreaseBreakLength.bind(this);\n    this.onIncreaseSessionLength = this.onIncreaseSessionLength.bind(this);\n    this.onDecreaseSessionLength = this.onDecreaseSessionLength.bind(this);\n    this.onToggleInterval = this.onToggleInterval.bind(this);\n    this.onDecreaseTimerMinute = this.onDecreaseTimerMinute.bind(this);\n    this.onResetTimer = this.onResetTimer.bind(this);\n    this.onPlayStopTimer = this.onPlayStopTimer.bind(this);\n  }\n\n\n  onIncreaseBreakLength() {\n    this.setState((prevState) => {\n      return {\n        breakLength: prevState.breakLength + 1\n      }\n    })\n  }\n\n  onDecreaseBreakLength() {\n    this.setState((prevState) => {\n      return {\n        breakLength: prevState.breakLength - 1\n      }\n    })\n  }\n\n  onIncreaseSessionLength() {\n    this.setState((prevState) => {\n      return {\n        sessionLength: prevState.sessionLength + 1,\n        timerMinute: prevState.timerMinute + 1\n      }\n    })\n  }\n\n  onDecreaseSessionLength() {\n    this.setState((prevState) => {\n      return {\n        sessionLength: prevState.sessionLength - 1,\n        timerMinute: prevState.timerMinute - 1\n      }\n    })\n  }\n\n  onDecreaseTimerMinute() {\n    this.setState((prevState) => {\n      return {\n        timerMinute: prevState.timerMinute - 1,\n      }\n    })\n  }\n\n  onToggleInterval(isSession) {\n    if (isSession) {\n      this.setState({\n        timerMinute: this.state.settionLength\n      })\n    } else { // there is a break\n      {\n        this.setState({\n          timerMinute: this.state.breakLength\n        })\n      }\n    }\n  }\n\n  onResetTimer() {\n    this.setState({\n      timerMinute: this.state.sessionLength\n    })\n  }\n\n  onPlayStopTimer(isPlay) {\n    this.setState({\n      isPlay: isPlay\n\n    })\n  }\n\n  render() {\n    return (\n      <section id=\"cover\">\n        <div className=\"container\">\n          <h1>Pomodoro Timer</h1>\n          <div className=\"row justify-content-center align-items-center\">\n            <BreakInterval\n              isStart={this.state.isPlay}\n              breakInterval={this.state.breakLength}\n              increaseBreak={this.onIncreaseBreakLength}\n              decreaseBreak={this.onDecreaseBreakLength} />\n            <SessionLength\n              isStart={this.state.isPlay}\n              sessionLength={this.state.sessionLength}\n              increaseSession={this.onIncreaseSessionLength}\n              decreaseSession={this.onDecreaseSessionLength} />\n          </div>\n          <FlipClock\n            isStart={this.state.isPlay}\n            timerMinute={this.state.timerMinute}\n            breakLength={this.state.breakLength}\n            decreaseTimerMinute={this.onDecreaseTimerMinute}\n            toggleInterval={this.onToggleInterval}\n            resetTimer={this.onResetTimer}\n            onPlayStopTimer={this.onPlayStopTimer} />\n        </div>\n      </section>\n    );\n  }\n\n}\n\nexport default App;\n\n\n","C:\\Users\\User\\react\\pomodoro-app\\src\\components\\SessionLength.js",[],"C:\\Users\\User\\react\\pomodoro-app\\src\\components\\BreakInterval.js",[],"C:\\Users\\User\\react\\pomodoro-app\\src\\components\\Timer.js",["37"],"import React from 'react';\r\nimport { FaPlay } from \"react-icons/fa\"\r\nimport { FaStop } from \"react-icons/fa\"\r\nimport { MdRefresh } from \"react-icons/md\"\r\nimport { IoReload } from \"react-icons/io5\"\r\n\r\n\r\n\r\nclass Timer extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            isSession: true,\r\n            timerSecond: 0,\r\n            intervalId: 0\r\n        }\r\n\r\n        this.decreaseTimer = this.decreaseTimer.bind(this);\r\n        this.playTimer = this.playTimer.bind(this);\r\n        this.stopTimer = this.stopTimer.bind(this);\r\n        this.resetTimer = this.resetTimer.bind(this);\r\n    }\r\n\r\n\r\n    playTimer() {\r\n        let intervalId = setInterval(this.decreaseTimer, 1000)\r\n\r\n        this.props.onPlayStopTimer(true);\r\n        this.setState({\r\n            intervalId: intervalId\r\n        })\r\n    }\r\n\r\n    decreaseTimer() {\r\n\r\n        switch (this.state.timerSecond) {\r\n            case 0:\r\n                if (this.props.timerMinute === 0) {\r\n                    if (this.state.isSession) {\r\n                        this.setState({\r\n                            isSession: false\r\n                        });\r\n\r\n                        this.props.toggleInterval(this.state.isSession);\r\n                    } else {\r\n                        this.setState({\r\n                            isSession: true\r\n                        });\r\n\r\n                        this.props.toggleInterval(this.state.isSession);\r\n\r\n                    }\r\n\r\n                } else {\r\n                    this.props.decreaseTimerMinute()\r\n                    this.setState({\r\n                        timerSecond: 59\r\n                    })\r\n                }\r\n\r\n                break;\r\n            default:\r\n                this.setState((prevState) => {\r\n                    return {\r\n                        timerSecond: prevState.timerSecond - 1\r\n                    }\r\n                })\r\n                break;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    stopTimer() {\r\n        clearInterval(this.state.intervalId); //Stop the time\r\n        this.props.onPlayStopTimer(false);\r\n    }\r\n\r\n    resetTimer() {\r\n        this.stopTimer();\r\n        this.props.resetTimer();\r\n        this.props.onPlayStopTimer(false);\r\n        this.setState({\r\n            timerSecond: 0,\r\n            isSession: true\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <section className=\"timer-container\">\r\n                    <h4>{this.state.isSession === true ? \"Session\" : \"Break\"}</h4>\r\n                    <span className=\"timer\">{this.props.timerMinute}</span>\r\n                    <span className=\"timer\">:</span>\r\n                    <span className=\"timer\">{this.state.timerSecond === 0 ? \"00\" : this.state.timerMinute < 10 ? \"0\" + this.state.timerSecond : this.state.timerSecond}</span>\r\n                </section>\r\n                <section id=\"cool-buttons\" className=\"interval-container\">\r\n                    <button type=\"button\" className=\"btn btn-outline-dark actions-btn\" onClick={this.playTimer}><FaPlay/></button>\r\n                    <button type=\"button\" className=\"btn btn-outline-dark actions-btn\" onClick={this.stopTimer}><FaStop/></button>\r\n                    <button type=\"button\" className=\"btn btn-outline-dark actions-btn\" font-size=\"3rem\" onClick={this.resetTimer}><IoReload/></button>\r\n                </section>\r\n            </section>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Timer;","C:\\Users\\User\\react\\pomodoro-app\\src\\components\\FlipClock.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":4,"column":8,"nodeType":"44","messageId":"45","endLine":4,"endColumn":13},{"ruleId":"46","severity":1,"message":"47","line":79,"column":7,"nodeType":"48","messageId":"49","endLine":83,"endColumn":8},{"ruleId":"42","severity":1,"message":"50","line":4,"column":10,"nodeType":"44","messageId":"45","endLine":4,"endColumn":19},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'Timer' is defined but never used.","Identifier","unusedVar","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'MdRefresh' is defined but never used.","no-global-assign","no-unsafe-negation"]